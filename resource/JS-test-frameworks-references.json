[
  {
    "url": "https://testanything.org/producers.html#javascript",
    "desc": "TAP Producers - Test Anything Protocol",
    "title": "TAP Producers - Test Anything Protocol",
    "auth": "",
    "date": 0
  },
  {
    "url": "https://github.com/tapjs/node-tap",
    "desc": "Test Anything Protocol tools for node. Contribute to tapjs/tapjs development by creating an account on GitHub.",
    "title": "GitHub - tapjs/tapjs: Test Anything Protocol tools for node",
    "auth": "tapjs",
    "date": 0
  },
  {
    "url": "https://github.com/ljharb/tape",
    "desc": "tap-producing test harness for node and browsers. Contribute to tape-testing/tape development by creating an account on GitHub.",
    "title": "GitHub - tape-testing/tape: tap-producing test harness for node and browsers",
    "auth": "ljharb",
    "date": 0
  },
  {
    "url": "https://elegantcode.com/2011/01/26/basic-javascript-part-8-namespaces/",
    "desc": "Basic JavaScript Part 8: Namespaces - ElegantCode",
    "title": "Basic JavaScript Part 8: Namespaces - ElegantCode",
    "auth": "Jan Van Ryswyck",
    "date": 0
  },
  {
    "url": "https://markdalgleish.com/2011/03/self-executing-anonymous-functions/",
    "desc": "When learning JavaScript, with all the attention given to variables, functions, &lsquo;if&rsquo; statements, loops and event handlers, often little &hellip;",
    "title": "Self-Executing Anonymous Functions - Mark Dalgleish",
    "auth": "Mark Dalgleish",
    "date": 0
  },
  {
    "url": "https://blog.mgechev.com/2012/08/29/self-invoking-functions-in-javascript-or-immediately-invoked-function-expression/",
    "desc": "Self-invoking functions in JavaScript (or Immediately Invoked Function Expressions) &middot; Minko Gechevs blog",
    "title": "Self-invoking functions in JavaScript (or Immediately Invoked Function Expressions) &middot; Minko Gechevs blog",
    "auth": "",
    "date": 0
  },
  {
    "url": "https://www.jeffryhouser.com/index.cfm/2015/10/13/Why-use-a-self-executing-function-with-AngularJS",
    "desc": "Jeffry Housers Blog: Why use a self executing function with AngularJS?",
    "title": "Jeffry Housers Blog: Why use a self executing function with AngularJS?",
    "auth": "",
    "date": 0
  },
  {
    "url": "https://api.jquery.com/",
    "desc": "jQuery API Documentation",
    "title": "jQuery API Documentation",
    "auth": "OpenJS Foundation - openjsf.org",
    "date": 0
  },
  {
    "url": "https://nodesource.com/blog/seven-convenient-ci-cd-tools-for-your-node-js-projects/",
    "desc": "A selection of awesome tools to use as a part of your continuous integration and continuous delivery (CI/CD) pipeline for Node.js apps.",
    "title": "7 Convenient CI/CD Tools for Your Node.js Projects - NodeSource",
    "auth": "bitandbang",
    "date": 0
  },
  {
    "url": "https://github.com/vitest-dev/vitest/issues/437",
    "desc": "Clear and concise description of the problem Implement tap reporter https://node-tap.org/tap-protocol/, to give users access to the tap ecosystem of converters. See for example https://www.npmjs.com/package/tap-junit (@Demivan) Note From...",
    "title": "Support tap reporter &middot; Issue #437 &middot; vitest-dev/vitest &middot; GitHub",
    "auth": "vitest-dev",
    "date": 0
  },
  {
    "url": "https://vitest.dev/guide/browser.html",
    "desc": "Next generation testing framework powered by Vite",
    "title": "Browser Mode | Guide | Vitest",
    "auth": "Vladimir, Anthony Fu, Ari Perkki&ouml;, Patak, Joaqu&iacute;n S&aacute;nchez, Hiroshi Ogawa and Vitest contributors",
    "date": 1723215894
  },
  {
    "url": "https://www.linkedin.com/pulse/introduction-microsoft-playwright-its-features-brief-part-suraweera/",
    "desc": "Microsoft Playwright was released in 2011 as an open-source project built on top of Puppeteer. It is relatively new on the market but has quickly gained popularity.",
    "title": "Introduction to Microsoft Playwright and its features in brief &mdash; Part 01",
    "auth": "",
    "date": 0
  },
  {
    "url": "https://playwright.dev/docs/codegen",
    "desc": "Test generator",
    "title": "Test generator",
    "auth": "",
    "date": 0
  },
  {
    "url": "https://jestjs.io/docs/troubleshooting#tests-are-failing-and-you-dont-know-why",
    "desc": "Troubleshooting",
    "title": "Troubleshooting",
    "auth": "",
    "date": 1695677791
  },
  {
    "url": "https://jestjs.io/docs/migration-guide",
    "desc": "Migrating to Jest",
    "title": "Migrating to Jest",
    "auth": "unknown",
    "date": 1694501127
  },
  {
    "url": "https://scribe.rip/@joenjenga/its-jest-common-problem-faced-using-jest-9905e96db8a",
    "desc": "ITS JEST &mdash; COMMON PROBLEM FACED USING JEST",
    "title": "ITS JEST &mdash; COMMON PROBLEM FACED USING JEST",
    "auth": "cant extract from medium",
    "date": 0
  },
  {
    "url": "https://jestjs.io/docs/troubleshooting#unresolved-promises",
    "desc": "Troubleshooting",
    "title": "Troubleshooting",
    "auth": "",
    "date": 1695677791
  },
  {
    "url": "https://www.slideshare.net/WapAdmin/drupalcon-2013",
    "desc": "Automated Testing With Jasmine, PhantomJS and Jenkins - Download as a PDF or view online for free",
    "title": "Automated Testing With Jasmine, PhantomJS and Jenkins | PPT",
    "auth": "",
    "date": 0
  },
  {
    "url": "https://stackoverflow.com/questions/7609223/how-can-we-run-javascript-jasmine-tests-from-jenkins-hudson-without-loading-a",
    "desc": "jquery - How can we run JavaScript jasmine tests from Jenkins (Hudson) without loading a JSP? - Stack Overflow",
    "title": "jquery - How can we run JavaScript jasmine tests from Jenkins (Hudson) without loading a JSP? - Stack Overflow",
    "auth": "No author for Q&amp;A sites",
    "date": 0
  },
  {
    "url": "https://miparnisariblog.wordpress.com/2016/02/11/how-to-integrate-javascript-test-results-with-jenkins/",
    "desc": "If you have a .NET project that includes JavaScript tests and you want to run them in a Continuous Integration server such as Jenkins, follow the simple steps below. As a bonus, you can also get code coverage measurements through the use of the Emma plugin. Configure the .NET solution Add the Chutzpah NuGet package&hellip;",
    "title": "How to integrate JavaScript test results with Jenkins &ndash; Just Another Software Developer",
    "auth": "",
    "date": 0
  },
  {
    "url": "https://en.wikipedia.org/wiki/Jasmine_%28JavaScript_testing_framework%29",
    "desc": "Jasmine (software) - Wikipedia",
    "title": "Jasmine (software) - Wikipedia",
    "auth": "Wikipedia contributors",
    "date": 0
  },
  {
    "url": "https://github.com/kozy4324/Jasmine-TAPReporter",
    "desc": "Jasmine reporter that reports a result in TAP format - kozy4324/Jasmine-TAPReporter",
    "title": "GitHub - kozy4324/Jasmine-TAPReporter: Jasmine reporter that reports a result in TAP format",
    "auth": "kozy4324",
    "date": 0
  },
  {
    "url": "https://www.npmjs.com/package/generator-jasmine-test",
    "desc": "Package to install generator-jasmine-test",
    "title": "Package to install generator-jasmine-test",
    "auth": "manstey",
    "date": 0
  },
  {
    "url": "https://www.htmlgoodies.com/html5/javascript/using-the-done-method-in-your-jasmine-driven-asynchronous-javascript-tests.html",
    "desc": "Using the done() Method in Your Jasmine-driven Asynchronous JavaScript Tests 6/19/13 Jasmine.Async is an add-on library for Jasmine that provides",
    "title": "Using the done() Method in Your Jasmine-driven Asynchronous JavaScript Tests | HTML Goodies",
    "auth": "Rob Gravelle",
    "date": 0
  },
  {
    "url": "https://api.qunitjs.com/",
    "desc": "The powerful, easy-to-use JavaScript testing framework.",
    "title": "QUnit",
    "auth": "@qunitjs",
    "date": 0
  },
  {
    "url": "https://mochajs.org/",
    "desc": "Mocha - the fun, simple, flexible JavaScript test framework",
    "title": "Mocha - the fun, simple, flexible JavaScript test framework",
    "auth": "",
    "date": 0
  },
  {
    "url": "https://www.redotheweb.com/2013/01/15/functional-testing-for-nodejs-using-mocha-and-zombie-js.html",
    "desc": "Functional Testing For Node.js Using Mocha and Zombie.js",
    "title": "Functional Testing For Node.js Using Mocha and Zombie.js",
    "auth": "Fran&ccedil;ois Zaninotto",
    "date": 0
  },
  {
    "url": "https://yslow.org/ruleset-matrix/",
    "desc": "Official YSlow Open Source Project Website. YSlow analyzes web pages and suggests ways to improve their performance based on a set of rules for high performance web pages.",
    "title": "YSlow - Official Open Source Project Website",
    "auth": "Marcel Duran",
    "date": 0
  },
  {
    "url": "https://scotch.io/tutorials/what-is-phantomjs-and-how-is-it-used",
    "desc": "Learn about PhantomJS and using it for screen capture, page automation, network monitoring, testing, and more.",
    "title": "What is PhantomJS and How is it Used? | DigitalOcean",
    "auth": "",
    "date": 0
  },
  {
    "url": "https://www.lambdatest.com/automation-testing-advisor/javascript/mocha-TAP",
    "desc": "Use the TAP method in your next Mocha project with LambdaTest Automation Testing Advisor. Learn how to set up and run automated tests with code examples of TAP method from our library.",
    "title": "Use TAP in Mocha With Examples | LambdaTest",
    "auth": "",
    "date": 0
  },
  {
    "url": "https://scribe.rip/@mosheezderman/how-to-set-up-ci-cd-pipeline-for-a-node-js-app-with-jenkins-c51581cc783c",
    "desc": "How to set up CI/CD Pipeline for a node.js app with Jenkins",
    "title": "How to set up CI/CD Pipeline for a node.js app with Jenkins",
    "auth": "cant extract from medium",
    "date": 0
  },
  {
    "url": "https://coderwall.com/p/qaebwq/running-mocha-tests-without-a-browser-not-even-phantomjs",
    "desc": "A protip by blockloop about test, browser, mocha, nodejs, unit, and brettof86.",
    "title": "Running Mocha tests without a browser (not even PhantomJS) (Example)",
    "auth": "https://coderwall.com/blockloop",
    "date": 0
  },
  {
    "url": "https://semaphoreci.com/blog/2018/03/27/phantomjs-is-dead-use-chrome-headless-in-continuous-integration.html",
    "desc": "If you&rsquo;ve been using PhantomJS for continuous integration, please switch to Headless Chrome. Read this post to see reason behind this suggestion.",
    "title": "PhantomJS Is Dead, Use Chrome Headless in Continuous Integration - Semaphore",
    "auth": "Marko Anastasov",
    "date": 0
  },
  {
    "url": "https://www.empathetic.dev/test-typescript-types",
    "desc": "Discover the power of TypeScript type testing. This guide explores Vitest, custom solutions, and tsd, helping you ensure robustness and reliability in your code.",
    "title": "A Deep Dive into Typescript Type Testing",
    "auth": "merkmoi",
    "date": 0
  }
]