[
  {
    "url": "https://spec.graphql.org/draft/",
    "desc": "GraphQL",
    "title": "GraphQL",
    "auth": "The GraphQL Foundation",
    "date": 0
  },
  {
    "url": "https://www.apollographql.com/docs/federation/",
    "desc": "Introduction to Apollo Federation",
    "title": "Introduction to Apollo Federation",
    "auth": "",
    "date": 0
  },
  {
    "url": "https://cloudyforsure.com/graphql/graphql-schema/",
    "desc": "GraphQL- Schema &ndash; Cloudy For Sure",
    "title": "GraphQL- Schema &ndash; Cloudy For Sure",
    "auth": "",
    "date": 0
  },
  {
    "url": "https://graphql.org/learn/schema/",
    "desc": "Schemas and Types | GraphQL",
    "title": "Schemas and Types | GraphQL",
    "auth": "The GraphQL Foundation",
    "date": 0
  },
  {
    "url": "https://graphql.org/learn/queries/",
    "desc": "Queries and Mutations | GraphQL",
    "title": "Queries and Mutations | GraphQL",
    "auth": "The GraphQL Foundation",
    "date": 0
  },
  {
    "url": "https://relay.dev/docs/guided-tour/updating-data/graphql-mutations/",
    "desc": "GraphQL mutations",
    "title": "GraphQL mutations",
    "auth": "",
    "date": 0
  },
  {
    "url": "https://dgraph.io/docs/graphql/subscriptions/",
    "desc": "Subscriptions allow clients to listen to real-time messages from the server. In GraphQL, it&rsquo;s straightforward to enable subscriptions on any type.",
    "title": "GraphQL Subscriptions - GraphQL",
    "auth": "",
    "date": 0
  },
  {
    "url": "https://blog.logrocket.com/securing-graphql-api-using-rate-limits-and-depth-limits/",
    "desc": "See how to secure your GraphQL API endpoints to prevent API spam and query attacks with rate and depth limiting.",
    "title": "Securing GraphQL API endpoints using rate limits and depth limits - LogRocket Blog",
    "auth": "Kumar Abhirup",
    "date": 0
  },
  {
    "url": "https://graphql-ruby.org/queries/timeout.html",
    "desc": "GraphQL - Timeout",
    "title": "GraphQL - Timeout",
    "auth": "",
    "date": 0
  },
  {
    "url": "https://typegraphql.com/docs/complexity.html",
    "desc": "A single GraphQL query can potentially generate a huge workload for a server, like thousands of database operations which can be used to cause DDoS attacks. In order to limit and keep track of what each GraphQL operation can do, 'TypeGraphQL` provides the option of integrating with Query Complexity tools like [graphql-query-complexity](https://github.com/ivome/graphql-query-complexity).",
    "title": "Query complexity &middot; TypeGraphQL",
    "auth": "",
    "date": 0
  },
  {
    "url": "https://learn.microsoft.com/en-us/graph/throttling",
    "desc": "Find best practices for maintaining optimal performance of the Microsoft Graph service if an overwhelming number of requests occurs.",
    "title": "Microsoft Graph throttling guidance - Microsoft Graph | Microsoft Learn",
    "auth": "FaithOmbongi",
    "date": 0
  },
  {
    "url": "https://www.altexsoft.com/blog/engineering/graphql-core-features-architecture-pros-and-cons/",
    "desc": "GraphQL Pros and Cons: advantages and disadvantages compared to REST, architecture, core features, tools, and ecosystem.",
    "title": "GraphQL: Core Features, Architecture, Pros and Cons",
    "auth": "AltexSoft",
    "date": 0
  },
  {
    "url": "https://www.atatus.com/glossary/graphql/#benefits-of-graphql",
    "desc": "A query and manipulation language for APIs is called GraphQL. A versatile and simple syntax is offered by GraphQL for describing data requirements.",
    "title": "GraphQL: Definition, Features, Benefits, When to Use, More",
    "auth": "@A_K_Janani",
    "date": 0
  },
  {
    "url": "https://stablekernel.com/article/advantages-and-disadvantages-of-graphql/",
    "desc": "Discover the people behind Atlanta&rsquo;s top digital transformation company. Learn what makes Stable Kernel a unique and amazing place to work today!",
    "title": "About Us | Stable Kernel",
    "auth": "",
    "date": 0
  },
  {
    "url": "https://scribe.rip/kocfinanstech/benefits-of-using-graphql-11d6c8a0104a",
    "desc": "Benefits of Using GraphQL",
    "title": "Benefits of Using GraphQL",
    "auth": "cant extract from medium",
    "date": 0
  },
  {
    "url": "https://sonspring.com/journal/front-end-gotchas-of-graphql/",
    "desc": "Front-end gotchas of GraphQL | SonSpring",
    "title": "Front-end gotchas of GraphQL | SonSpring",
    "auth": "unknown",
    "date": 0
  },
  {
    "url": "https://graphql.org/blog/2016-05-02-rest-api-graphql-wrapper/",
    "desc": "Wrapping a REST API in GraphQL | GraphQL",
    "title": "Wrapping a REST API in GraphQL | GraphQL",
    "auth": "The GraphQL Foundation",
    "date": 0
  },
  {
    "url": "https://scribe.rip/@elijahbanjo/understanding-graphql-apis-from-a-rest-api-point-of-view-08196600c667",
    "desc": "Understanding GraphQL APIs from a REST API point of view",
    "title": "Understanding GraphQL APIs from a REST API point of view",
    "auth": "cant extract from medium",
    "date": 0
  },
  {
    "url": "https://daily.dev/blog/caching-in-graphql",
    "desc": "Caching in GraphQL: How to prevent excessive and unnecessary requests",
    "title": "Caching in GraphQL: How to prevent excessive and unnecessary requests",
    "auth": "@ngArchangel",
    "date": 0
  },
  {
    "url": "https://graphql.org/learn/caching/#globally-unique-ids",
    "desc": "Caching | GraphQL",
    "title": "Caching | GraphQL",
    "auth": "The GraphQL Foundation",
    "date": 0
  },
  {
    "url": "https://blog.logrocket.com/http-caching-graphql/",
    "desc": "GraphQLs lack of support for server-side caching is a well-known disadvantage. But there are indeed ways to use HTTP caching with GraphQL.",
    "title": "HTTP caching in GraphQL - LogRocket Blog",
    "auth": "Leonardo Losoviz",
    "date": 0
  },
  {
    "url": "https://sonspring.com/journal/front-end-gotchas-of-graphql/",
    "desc": "Front-end gotchas of GraphQL | SonSpring",
    "title": "Front-end gotchas of GraphQL | SonSpring",
    "auth": "unknown",
    "date": 0
  },
  {
    "url": "https://www.apollographql.com/docs/apollo-server/data/fetching-rest/",
    "desc": "Fetching from REST",
    "title": "Fetching from REST",
    "auth": "",
    "date": 0
  },
  {
    "url": "https://graphql.org/learn/queries/",
    "desc": "Queries and Mutations | GraphQL",
    "title": "Queries and Mutations | GraphQL",
    "auth": "The GraphQL Foundation",
    "date": 0
  },
  {
    "url": "https://apollographql.com/docs/react/data/queries",
    "desc": "Queries",
    "title": "Queries",
    "auth": "",
    "date": 0
  },
  {
    "url": "https://graphql.org/learn/queries/#aliases",
    "desc": "Queries and Mutations | GraphQL",
    "title": "Queries and Mutations | GraphQL",
    "auth": "The GraphQL Foundation",
    "date": 0
  },
  {
    "url": "https://graphql.org/learn/queries/#fragments",
    "desc": "Queries and Mutations | GraphQL",
    "title": "Queries and Mutations | GraphQL",
    "auth": "The GraphQL Foundation",
    "date": 0
  },
  {
    "url": "https://graphql.org/learn/queries/#inline-fragments",
    "desc": "Queries and Mutations | GraphQL",
    "title": "Queries and Mutations | GraphQL",
    "auth": "The GraphQL Foundation",
    "date": 0
  },
  {
    "url": "https://graphql.org/learn/queries/#operation-name",
    "desc": "Queries and Mutations | GraphQL",
    "title": "Queries and Mutations | GraphQL",
    "auth": "The GraphQL Foundation",
    "date": 0
  },
  {
    "url": "https://graphql.org/learn/queries/#variables",
    "desc": "Queries and Mutations | GraphQL",
    "title": "Queries and Mutations | GraphQL",
    "auth": "The GraphQL Foundation",
    "date": 0
  },
  {
    "url": "https://graphql.org/learn/queries/#using-variables-inside-fragments",
    "desc": "Queries and Mutations | GraphQL",
    "title": "Queries and Mutations | GraphQL",
    "auth": "The GraphQL Foundation",
    "date": 0
  },
  {
    "url": "https://graphql.org/learn/queries/#meta-fields",
    "desc": "Queries and Mutations | GraphQL",
    "title": "Queries and Mutations | GraphQL",
    "auth": "The GraphQL Foundation",
    "date": 0
  },
  {
    "url": "https://graphql.org/learn/queries/#multiple-fields-in-mutations",
    "desc": "Queries and Mutations | GraphQL",
    "title": "Queries and Mutations | GraphQL",
    "auth": "The GraphQL Foundation",
    "date": 0
  },
  {
    "url": "https://graphql.org/learn/queries/#directives",
    "desc": "Queries and Mutations | GraphQL",
    "title": "Queries and Mutations | GraphQL",
    "auth": "The GraphQL Foundation",
    "date": 0
  },
  {
    "url": "https://fauna.com/blog/graphql-mutations#best-practices-for-graph-ql-mutations",
    "desc": "Fauna combines the relational power, strong consistency, and schema capabilities of a relational database with the flexibility and scalability of documents, all delivered as a Cloud API with zero engineering operations.",
    "title": "Blog",
    "auth": "@fauna",
    "date": 0
  },
  {
    "url": "https://www.reddit.com/r/graphql/comments/g6gfxr/best_mutation_design_practice/",
    "desc": "Reddit - Dive into anything",
    "title": "Reddit - Dive into anything",
    "auth": "",
    "date": 0
  },
  {
    "url": "https://www.indiehackers.com/post/graphql-what-is-the-best-practice-for-updating-arrays-of-objects-in-a-mutation-b3b1d9b411",
    "desc": "I have a form that I can update a whole set of lets say recipes at once. The user should be able to cancel after editing and discard what they have fill...",
    "title": "GraphQL: What is the best practice for updating arrays of objects in a mutation? - Indie Hackers",
    "auth": "",
    "date": 0
  },
  {
    "url": "https://www.apollographql.com/docs/react/data/operation-best-practices/",
    "desc": "GraphQL query best practices",
    "title": "GraphQL query best practices",
    "auth": "",
    "date": 0
  },
  {
    "url": "https://graphql.org/learn/queries/#mutations",
    "desc": "Queries and Mutations | GraphQL",
    "title": "Queries and Mutations | GraphQL",
    "auth": "The GraphQL Foundation",
    "date": 0
  },
  {
    "url": "https://fauna.com/blog/graphql-mutations#how-to-use-mutations-in-graph-ql",
    "desc": "Fauna combines the relational power, strong consistency, and schema capabilities of a relational database with the flexibility and scalability of documents, all delivered as a Cloud API with zero engineering operations.",
    "title": "Blog",
    "auth": "@fauna",
    "date": 0
  },
  {
    "url": "https://hasura.io/learn/graphql/intro-graphql/graphql-mutations/",
    "desc": "GraphQL Mutations - Writing data",
    "title": "GraphQL Mutations - Writing data",
    "auth": "",
    "date": 0
  },
  {
    "url": "https://apollographql.com/docs/react/data/mutations",
    "desc": "Mutations in Apollo Client",
    "title": "Mutations in Apollo Client",
    "auth": "",
    "date": 0
  },
  {
    "url": "https://graphql.org/learn/schema/#object-types-and-fields",
    "desc": "Schemas and Types | GraphQL",
    "title": "Schemas and Types | GraphQL",
    "auth": "The GraphQL Foundation",
    "date": 0
  },
  {
    "url": "https://graphql.org/learn/schema/#enumeration-types",
    "desc": "Schemas and Types | GraphQL",
    "title": "Schemas and Types | GraphQL",
    "auth": "The GraphQL Foundation",
    "date": 0
  },
  {
    "url": "https://graphql.org/learn/schema/#the-query-and-mutation-types",
    "desc": "Schemas and Types | GraphQL",
    "title": "Schemas and Types | GraphQL",
    "auth": "The GraphQL Foundation",
    "date": 0
  },
  {
    "url": "https://graphql.org/learn/schema/#lists-and-non-null",
    "desc": "Schemas and Types | GraphQL",
    "title": "Schemas and Types | GraphQL",
    "auth": "The GraphQL Foundation",
    "date": 0
  },
  {
    "url": "https://graphql-ruby.org/type_definitions/lists.html",
    "desc": "GraphQL - Lists",
    "title": "GraphQL - Lists",
    "auth": "",
    "date": 0
  },
  {
    "url": "https://dgraph.io/docs/graphql/queries/search-filtering/#query-a-list-of-objects",
    "desc": "Queries generated for a GraphQL type allow you to generate a single list of objects for a type. You can also query a list of objects using GraphQL.",
    "title": "Search and Filtering - GraphQL",
    "auth": "",
    "date": 0
  },
  {
    "url": "https://graphql.org/learn/schema/#interfaces",
    "desc": "Schemas and Types | GraphQL",
    "title": "Schemas and Types | GraphQL",
    "auth": "The GraphQL Foundation",
    "date": 0
  },
  {
    "url": "https://graphql.org/learn/schema/#union-types",
    "desc": "Schemas and Types | GraphQL",
    "title": "Schemas and Types | GraphQL",
    "auth": "The GraphQL Foundation",
    "date": 0
  },
  {
    "url": "https://graphql.org/learn/schema/#input-types",
    "desc": "Schemas and Types | GraphQL",
    "title": "Schemas and Types | GraphQL",
    "auth": "The GraphQL Foundation",
    "date": 0
  },
  {
    "url": "https://graphql.org/learn/validation/",
    "desc": "Validation | GraphQL",
    "title": "Validation | GraphQL",
    "auth": "The GraphQL Foundation",
    "date": 0
  },
  {
    "url": "https://www.ibm.com/docs/en/api-connect/10.0.1.x?topic=api-graphql-limitations",
    "desc": "This page details the limitations in the API Connect GraphQL implementation for the current release.",
    "title": "IBM Documentation",
    "auth": "",
    "date": 0
  },
  {
    "url": "https://graphql.org/learn/best-practices/",
    "desc": "GraphQL Best Practices | GraphQL",
    "title": "GraphQL Best Practices | GraphQL",
    "auth": "The GraphQL Foundation",
    "date": 0
  },
  {
    "url": "https://docs.eduflow.com/graphql/inline-fragments",
    "desc": "Inline fragments | Eduflow",
    "title": "Inline fragments | Eduflow",
    "auth": "",
    "date": 0
  },
  {
    "url": "https://ckimes89.gitbooks.io/graphql-net/content/docs/queries_and_mutations/inline-fragments.html",
    "desc": "Inline Fragments &middot; GraphQL.Net",
    "title": "Inline Fragments &middot; GraphQL.Net",
    "auth": "Chad Kimes",
    "date": 0
  },
  {
    "url": "https://graphql.org/learn/execution/#root-fields-resolvers",
    "desc": "Execution | GraphQL",
    "title": "Execution | GraphQL",
    "auth": "The GraphQL Foundation",
    "date": 0
  },
  {
    "url": "https://graphql.org/learn/introspection/",
    "desc": "Introspection | GraphQL",
    "title": "Introspection | GraphQL",
    "auth": "The GraphQL Foundation",
    "date": 0
  },
  {
    "url": "https://en.wikipedia.org/wiki/Web_Services_Discovery",
    "desc": "Web Services Discovery - Wikipedia",
    "title": "Web Services Discovery - Wikipedia",
    "auth": "Wikipedia contributors",
    "date": 0
  },
  {
    "url": "https://www.sciencedirect.com/topics/computer-science/web-service-discovery",
    "desc": "HTTP_ERROR, Received code 403 code.",
    "title": "",
    "auth": "",
    "date": 0
  },
  {
    "url": "https://hasura.io/blog/deep-dive-into-relay-graphql-client/",
    "desc": "A comprehensive guide to building performant, type-safe apps with Relay, from GraphQL fragments and query best practices, to the Relay compiler and the server spec.",
    "title": "A deep-dive into Relay, the friendly &amp; opinionated GraphQL client",
    "auth": "",
    "date": 0
  },
  {
    "url": "https://codeburst.io/using-dataloader-with-graphql-a-concrete-example-9b21352f1676",
    "desc": "Using DataLoader with GraphQL: A Concrete Example",
    "title": "Using DataLoader with GraphQL: A Concrete Example",
    "auth": "",
    "date": 0
  },
  {
    "url": "https://scribe.rip/the-marcy-lab-school/how-to-use-dataloader-js-9727c527efd0",
    "desc": "How to use DataLoaders in GraphQL",
    "title": "How to use DataLoaders in GraphQL",
    "auth": "cant extract from medium",
    "date": 0
  },
  {
    "url": "https://graphql-dotnet.github.io/docs/guides/dataloader/",
    "desc": "graphql-dotnet.github.io",
    "title": "graphql-dotnet.github.io",
    "auth": "docs",
    "date": 0
  },
  {
    "url": "https://www.prisma.io",
    "desc": "Build, fortify, and grow your application easily with an intuitive data model, type-safety, automated migrations, connection pooling, caching, and real-time database subscriptions.",
    "title": "Prisma | Simplify working and interacting with databases",
    "auth": "@prisma",
    "date": 0
  },
  {
    "url": "https://hasura.io",
    "desc": "Unlock the speed and simplicity of GraphQL at any scale to effortlessly build, operate, and evolve enterprise-grade APIs across multiple domains.",
    "title": "Build, operate, and evolve enterprise-grade GraphQL APIs easily with Hasura",
    "auth": "",
    "date": 0
  },
  {
    "url": "https://mocki.io/graphql",
    "desc": "Use a fake GraphQL API to start creating GraphQL apps without a backend in place 👩&zwj;💻",
    "title": "Mock and Fake GraphQL API",
    "auth": "Sveten AB",
    "date": 0
  },
  {
    "url": "https://github.com/marmelab/json-graphql-server",
    "desc": "Get a full fake GraphQL API with zero coding in less than 30 seconds. - marmelab/json-graphql-server",
    "title": "GitHub - marmelab/json-graphql-server: Get a full fake GraphQL API with zero coding in less than 30 seconds.",
    "auth": "marmelab",
    "date": 0
  },
  {
    "url": "https://www.apollographql.com/docs/apollo-server/testing/mocking/",
    "desc": "Mocking",
    "title": "Mocking",
    "auth": "",
    "date": 0
  },
  {
    "url": "https://www.preciouschicken.com/blog/posts/jest-testing-graphql-api/",
    "desc": "A worked example using the Jest JavaScript Testing Framework to test a GraphQL API.",
    "title": "A no jokes guide to testing a GraphQL API with Jest &middot; PreciousChicken: Blog",
    "auth": "PreciousChicken",
    "date": 0
  },
  {
    "url": "https://blog.logrocket.com/writing-end-to-end-tests-for-graphql-servers-using-jest/",
    "desc": "Learn how to write end-to-end tests to esnure your GraphQL servers behave as expected, which is particularly important after adding new features.",
    "title": "Writing end-to-end tests for GraphQL servers using Jest - LogRocket Blog",
    "auth": "Gbolahan Olagunju",
    "date": 0
  },
  {
    "url": "https://kolosek.com/testing-graphql-server/",
    "desc": "Testing GraphQL Server in NodeJS | Kolosek",
    "title": "Testing GraphQL Server in NodeJS | Kolosek",
    "auth": "",
    "date": 0
  }
]